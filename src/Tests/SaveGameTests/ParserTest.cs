using VampireSwansong.Editor;
using FluentAssertions;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;
using System.Collections.Generic;

namespace SaveGameTests;

[TestClass]
public class ParserTest
{
    [TestMethod]
    public void BasicParsing_Success()
    {
        //Saves/Slot2.sav
        var data = new byte[] { 0x04, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x53, 0x6C, 0x6F, 0x74, 0x31, 0x00, 0x00, 0xF6, 0xEA, 0x48, 0x09, 0x3F, 0xDA, 0x08, 0x0E, 0x00, 0x00, 0x00, 0x53, 0x43, 0x30, 0x31, 0x5F, 0x50, 0x72, 0x69, 0x6E, 0x63, 0x65, 0x5F, 0x50, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x33, 0x4F, 0x75, 0x74, 0x66, 0x69, 0x74, 0x73, 0x4D, 0x61, 0x77, 0x6C, 0x61, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x50, 0x61, 0x63, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x53, 0x75, 0x62, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6E, 0x63, 0x65, 0x2E, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2E, 0x45, 0x6D, 0x65, 0x6D };
        var parser = new SaveGameParser(data);
        var save = parser.Parse();

        save.Should().NotBeNull();
        save!.Header.Should().HaveCount(81);
        save.Characters.Should().HaveCount(1);
        save.Characters.ElementAt(0).Length.Should().Be(33);
        save.Characters.ElementAt(0).Data.Should().HaveCount(33);
        save.Characters.ElementAt(0).StartIndex.Should().Be(81);
        save.Characters.ElementAt(0).Title.Should().Be("SubLevelReference.Characters.Emem");
    }

    [TestMethod]
    public void BasicRebuild_SaveGame_Success()
    {
        byte[] referenceData = new byte[] { 0x04, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x53, 0x6C, 0x6F, 0x74, 0x31, 0x00, 0x00, 0xF6, 0xEA, 0x48, 0x09, 0x3F, 0xDA, 0x08, 0x0E, 0x00, 0x00, 0x00, 0x53, 0x43, 0x30, 0x31, 0x5F, 0x50, 0x72, 0x69, 0x6E, 0x63, 0x65, 0x5F, 0x50, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x33, 0x4F, 0x75, 0x74, 0x66, 0x69, 0x74, 0x73, 0x4D, 0x61, 0x77, 0x6C, 0x61, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x50, 0x61, 0x63, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x53, 0x75, 0x62, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6E, 0x63, 0x65, 0x2E, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2E, 0x45, 0x6D, 0x65, 0x6D };

        BasicSaveGame saveGame = new BasicSaveGame()
        {
            Header = new byte[] { 0x04, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x53, 0x6C, 0x6F, 0x74, 0x31, 0x00, 0x00, 0xF6, 0xEA, 0x48, 0x09, 0x3F, 0xDA, 0x08, 0x0E, 0x00, 0x00, 0x00, 0x53, 0x43, 0x30, 0x31, 0x5F, 0x50, 0x72, 0x69, 0x6E, 0x63, 0x65, 0x5F, 0x50, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x33, 0x4F, 0x75, 0x74, 0x66, 0x69, 0x74, 0x73, 0x4D, 0x61, 0x77, 0x6C, 0x61, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x50, 0x61, 0x63, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 },
            Characters = new List<Character>()
            {
                new Character()
                {
                    Title = "SubLevelReference.Characters.Emem",
                    Data = new byte[] { 0x53, 0x75, 0x62, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6E, 0x63, 0x65, 0x2E, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2E, 0x45, 0x6D, 0x65, 0x6D },
                    Length = 33,
                    StartIndex = 81
                }
            }
        };
        var data = saveGame.Rebuild();
        data.Should().Equal(referenceData);
    }
}